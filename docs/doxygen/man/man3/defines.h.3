.TH "/mnt/c/Users/stefa/Desktop/system_call/src/defines.h" 3 "Gio 5 Mag 2022" "Version 0.0.1" "SYSTEM_CALL" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/mnt/c/Users/stefa/Desktop/system_call/src/defines.h \- Contiene la definizioni di variabili e funzioni specifiche del progetto\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <sys/types\&.h>\fP
.br
\fC#include <sys/ipc\&.h>\fP
.br

.SS "Strutture dati"

.in +1c
.ti -1c
.RI "struct \fBmsg_t\fP"
.br
.in -1c
.SS "Definizioni"

.in +1c
.ti -1c
.RI "#define \fBBUFFER_SZ\fP   255"
.br
.RI "Buffer usato da getcwd() "
.ti -1c
.RI "#define \fBFIFO1_PATH\fP   '/tmp/fifo1_file\&.txt'"
.br
.RI "Percorso file FIFO 1\&. "
.ti -1c
.RI "#define \fBFIFO2_PATH\fP   '/tmp/fifo2_file\&.txt'"
.br
.RI "Percorso file FIFO 2\&. "
.ti -1c
.RI "#define \fBCONTAINS_N\fP   1"
.br
.RI "mtype messaggio che contiene numero di file 'sendme_' "
.ti -1c
.RI "#define \fBCONTAINS_FIFO1_FILE_PART\fP   2"
.br
.RI "mtype messaggio che contiene prima parte del contenuto del file 'sendme_' "
.ti -1c
.RI "#define \fBCONTAINS_FIFO2_FILE_PART\fP   3"
.br
.RI "mtype messaggio che contiene seconda parte del contenuto del file 'sendme_' "
.ti -1c
.RI "#define \fBCONTAINS_MSGQUEUE_FILE_PART\fP   4"
.br
.RI "mtype messaggio che contiene terza parte del contenuto del file 'sendme_' "
.ti -1c
.RI "#define \fBCONTAINS_SHM_FILE_PART\fP   5"
.br
.RI "mtype messaggio che contiene quarta parte del contenuto del file 'sendme_' "
.ti -1c
.RI "#define \fBCONTAINS_DONE\fP   6"
.br
.RI "mtype messaggio che contiene il messaggio di fine proveniente dal server "
.ti -1c
.RI "#define \fBINIZIALIZZAZIONE_MTYPE\fP   \-1"
.br
.RI "mtype messaggio che contiene il valore usato per inizializzare la matrice contenente i file finali "
.ti -1c
.RI "#define \fBMAX_MSG_PER_CHANNEL\fP   50"
.br
.RI "numero massimo di messaggi per canale di comunicazione "
.ti -1c
.RI "#define \fBMSG_MAX_SZ\fP   4096"
.br
.RI "dimensione massima del messaggio/file da inviare "
.ti -1c
.RI "#define \fBMSG_PARTS_NUM\fP   4"
.br
.RI "numero parti in cui suddividere il messaggio "
.ti -1c
.RI "#define \fBMSG_BUFFER_SZ\fP   (\fBMSG_MAX_SZ\fP / \fBMSG_PARTS_NUM\fP)"
.br
.RI "dimensione massima di una porzione di messaggio "
.in -1c
.SS "Ridefinizioni di tipo (typedef)"

.in +1c
.ti -1c
.RI "typedef struct \fBmsg_t\fP \fBmsg_t\fP"
.br
.in -1c
.SS "Funzioni"

.in +1c
.ti -1c
.RI "key_t \fBget_ipc_key\fP ()"
.br
.ti -1c
.RI "key_t \fBget_ipc_key2\fP ()"
.br
.ti -1c
.RI "key_t \fBget_project_ipc_key\fP (char proj_id)"
.br
.ti -1c
.RI "bool \fBarrayContainsAllTrue\fP (bool arr[], int len)"
.br
.RI "Restituisce vero se l'array contiene tutti true\&. "
.ti -1c
.RI "int \fBblockFD\fP (int fd, int blocking)"
.br
.RI "Rende bloccante oppure non bloccante un file descriptor\&. "
.in -1c
.SS "Variabili"

.in +1c
.ti -1c
.RI "char \fBEXECUTABLE_DIR\fP [\fBBUFFER_SZ\fP]"
.br
.RI "Percorso cartella eseguibile\&. "
.in -1c
.SH "Descrizione dettagliata"
.PP 
Contiene la definizioni di variabili e funzioni specifiche del progetto\&. 


.SH "Documentazione delle ridefinizioni di tipo (typedef)"
.PP 
.SS "typedef struct \fBmsg_t\fP  \fBmsg_t\fP"
Rappresenta un messaggio contenente una porzione del contenuto di un file, il numero di file inviati dal client oppure il messaggio 'ok' quando il server ha ricevuto il numero di file\&. 
.SH "Documentazione delle funzioni"
.PP 
.SS "bool arrayContainsAllTrue (bool arr[], int len)"

.PP
Restituisce vero se l'array contiene tutti true\&. 
.PP
\fBParametri:\fP
.RS 4
\fIarr\fP array di booleani 
.br
\fIlen\fP lunghezza array 
.RE
.PP
\fBRestituisce:\fP
.RS 4
true arr contiene tutti true 
.PP
false arr contiene almeno un false 
.RE
.PP

.SS "int blockFD (int fd, int blocking)"

.PP
Rende bloccante oppure non bloccante un file descriptor\&. 
.PP
\fBParametri:\fP
.RS 4
\fIfd\fP file descriptor 
.br
\fIblocking\fP 0: non bloccante, 1: bloccante 
.RE
.PP
\fBRestituisce:\fP
.RS 4
int Vale 0 se fallisce 
.RE
.PP

.SS "key_t get_ipc_key ()"
Restituisce la prima chiave IPC ottenuta con \fBget_project_ipc_key()\fP\&.
.PP
\fBRestituisce:\fP
.RS 4
key_t Chiave IPC 
.RE
.PP

.SS "key_t get_ipc_key2 ()"
Restituisce la seconda chiave IPC ottenuta con \fBget_project_ipc_key()\fP\&.
.PP
\fBRestituisce:\fP
.RS 4
key_t Chiave IPC 
.RE
.PP

.SS "key_t get_project_ipc_key (char proj_id)"
Restituisce una chiave IPC generica per il progetto ottenuta con ftok sulla cartella con gli eseguibili\&.
.PP
\fBRestituisce:\fP
.RS 4
key_t Chiave IPC 
.RE
.PP

.SH "Autore"
.PP 
Generato automaticamente da Doxygen per SYSTEM_CALL a partire dal codice sorgente\&.
